name: Django CI/CD  
on:  
  push:  
    branches: [ main ] 


jobs:
  quality-assurance:
    name: Quality Assurance
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        db: [postgres]
        python-version: [3.10.12]
        include:
          - db: postgres
            db_port: 5432

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: katyush2_db
          POSTGRES_USER: katyush2_admin
          POSTGRES_PASSWORD: katyusha@dmin2023
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade django-cors-headers
          pip install -r requirements.txt

      - name: Run Tests
        env:
          DB: ${{ matrix.db }}
          DB_HOST: 'localhost'
          DB_PORT: ${{ matrix.db_port }}
          DB_PASSWORD: katyusha@dmin2023
        run: |
          pytest

  deploy:  
    needs: build-and-test  
    runs-on: ubuntu-latest  
    if: github.ref == 'refs/heads/master'  
    steps:  
    - name: Checkout code  
      uses: actions/checkout@v2  

    - name: Setup SSH  
      uses: webfactory/ssh-agent@v0.5.0  
      with:  
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  

    - name: Deploy to VPS  
      run: |  
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} -p ${{ secrets.VPS_PORT }} <<EOF  
          cd /path/to/your/project  
          docker-compose -f docker-compose.yml down  
          git pull  
          docker-compose -f docker-compose.yml up --build -d  
        EOF
